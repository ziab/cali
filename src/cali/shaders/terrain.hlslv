#include "cali_common.fx"

float4x4 IvModelViewProjectionMatrix;
float4x4 IvNormalMatrix;
float4x4 modelMatrix;

Texture2D height_map;
SamplerState height_mapSampler;

float3 get_noramal_from_tex(Texture2D tex, SamplerState samp, float2 uv)
{
    float h1 = tex.SampleLevel(samp, uv, 0);
    float h2 = tex.SampleLevel(samp, uv + float2(0.001, 0.000), 0);
    float h3 = tex.SampleLevel(samp, uv + float2(0.001, 0.001), 0);

    float3 v1 = float3(uv.x, h1, uv.y);
    float3 v2 = float3(uv.x + 0.001, h2, uv.y);
    float3 v3 = float3(uv.x + 0.001, h3, uv.y + 0.001);

    float3 normal = cross(normalize(v3 - v1), normalize(v2 - v1));

    return normal;
}

VS_OUTPUT main(float2 uv : TEXCOORD, float3 normal : NORMAL, float4 pos : POSITION)
{
    VS_OUTPUT output = (VS_OUTPUT) 0;

    float4 position = pos;

    position.y = sqrt(height_map.SampleLevel(height_mapSampler, uv, 0).r) * 255.0 * 0.035;

    output.position = mul(IvModelViewProjectionMatrix, position);
    output.worldPos = (float3) (mul(modelMatrix, position));
    output.normal = (float3) (mul(IvNormalMatrix, float4(get_noramal_from_tex(height_map, height_mapSampler, uv), 0)));
    output.depth = output.position;
    return output;
}
